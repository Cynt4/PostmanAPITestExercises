{
	"info": {
		"_postman_id": "3dc52458-8fb2-4736-9300-7532068ca0e0",
		"name": "BoredApi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7177155"
	},
	"item": [
		{
			"name": "Get a random activity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches relaxation activity\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"relaxation\");\r",
							"});\r",
							"pm.test(\"Check activity participants\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.participants).to.eql(1);\r",
							"});\r",
							"pm.test(\"Content-Type is present in Header\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Response time is less than 1s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://www.boredapi.com/api/activity",
					"protocol": "https",
					"host": [
						"www",
						"boredapi",
						"com"
					],
					"path": [
						"api",
						"activity"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a relaxation activity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Check relaxation activity\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.type).to.eql(\"relaxation\");\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://www.boredapi.com/api/activity?type=relaxation",
					"protocol": "https",
					"host": [
						"www",
						"boredapi",
						"com"
					],
					"path": [
						"api",
						"activity"
					],
					"query": [
						{
							"key": "type",
							"value": "relaxation"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a relaxation activity with one participant",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Check relaxation activity\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.type).to.eql(\"relaxation\");\r",
							"});\r",
							"pm.test(\"Check one participant\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.participants).to.eql(1);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://www.boredapi.com/api/activity?type=relaxation&participants?type=1",
					"protocol": "https",
					"host": [
						"www",
						"boredapi",
						"com"
					],
					"path": [
						"api",
						"activity"
					],
					"query": [
						{
							"key": "type",
							"value": "relaxation"
						},
						{
							"key": "participants?type",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a recreational activity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Check recreational activity\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.type).to.eql(\"recreational\");\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://www.boredapi.com/api/activity?type=recreational",
					"protocol": "https",
					"host": [
						"www",
						"boredapi",
						"com"
					],
					"path": [
						"api",
						"activity"
					],
					"query": [
						{
							"key": "type",
							"value": "recreational"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a recreational activity with one participant",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Check two participants\", function() {\r",
							"    let jsonData = pm.response.json();\r",
							"    if (jsonData.error === \"No activity found with the specified parameters\") {\r",
							"        pm.expect(jsonData.error === \"No activity found with the specified parameters\")\r",
							"    } else {\r",
							"        pm.expect(jsonData.type).to.eql(\"recreational\");\r",
							"        pm.expect(jsonData.participants).to.eql(1);\r",
							"    }\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://www.boredapi.com/api/activity?type=recreational&participants=1",
					"protocol": "https",
					"host": [
						"www",
						"boredapi",
						"com"
					],
					"path": [
						"api",
						"activity"
					],
					"query": [
						{
							"key": "type",
							"value": "recreational"
						},
						{
							"key": "participants",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a recreational activity with two participants",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Check two participants\", function() {\r",
							"    let jsonData = pm.response.json();\r",
							"    if (jsonData.error === \"No activity found with the specified parameters\") {\r",
							"        pm.expect(jsonData.error === \"No activity found with the specified parameters\")\r",
							"    } else {\r",
							"        pm.expect(jsonData.type).to.eql(\"recreational\");\r",
							"        pm.expect(jsonData.participants).to.eql(2);\r",
							"    }\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://www.boredapi.com/api/activity?type=recreational&participants=2",
					"protocol": "https",
					"host": [
						"www",
						"boredapi",
						"com"
					],
					"path": [
						"api",
						"activity"
					],
					"query": [
						{
							"key": "type",
							"value": "recreational"
						},
						{
							"key": "participants",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a recreational activity with three participants",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Check two participants\", function() {\r",
							"    let jsonData = pm.response.json();\r",
							"    if (jsonData.error === \"No activity found with the specified parameters\") {\r",
							"        pm.expect(jsonData.error === \"No activity found with the specified parameters\")\r",
							"    } else {\r",
							"        pm.expect(jsonData.type).to.eql(\"recreational\");\r",
							"        pm.expect(jsonData.participants).to.eql(3);\r",
							"    }\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://www.boredapi.com/api/activity?type=recreational&participants=3",
					"protocol": "https",
					"host": [
						"www",
						"boredapi",
						"com"
					],
					"path": [
						"api",
						"activity"
					],
					"query": [
						{
							"key": "type",
							"value": "recreational"
						},
						{
							"key": "participants",
							"value": "3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a busywork activity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Check recreational activity\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.type).to.eql(\"busywork\");\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://www.boredapi.com/api/activity?type=busywork",
					"protocol": "https",
					"host": [
						"www",
						"boredapi",
						"com"
					],
					"path": [
						"api",
						"activity"
					],
					"query": [
						{
							"key": "type",
							"value": "busywork"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a busywork activity with a link",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Check busywork activity\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.type).to.eql(\"busywork\");\r",
							"});\r",
							"pm.test(\"Check link appearance\", function() {\r",
							"    let jsonData = pm.response.json();\r",
							"    if (jsonData.contain === \"https://\") {\r",
							"        pm.expect(jsonData.contain === \"https://\");\r",
							"    } else {\r",
							"        null;\r",
							"    }\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://www.boredapi.com/api/activity?type=busywork",
					"protocol": "https",
					"host": [
						"www",
						"boredapi",
						"com"
					],
					"path": [
						"api",
						"activity"
					],
					"query": [
						{
							"key": "type",
							"value": "busywork"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get an activity with unique ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Key is 5881028\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.key).to.eql(\"5881028\");\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://www.boredapi.com/api/activity?key=5881028",
					"protocol": "http",
					"host": [
						"www",
						"boredapi",
						"com"
					],
					"path": [
						"api",
						"activity"
					],
					"query": [
						{
							"key": "key",
							"value": "5881028"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get an activity with price less than 0.5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Price is less than 0.5\", function() {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.price).to.be.below(0.5);\r",
							"})\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://www.boredapi.com/api/activity",
					"protocol": "http",
					"host": [
						"www",
						"boredapi",
						"com"
					],
					"path": [
						"api",
						"activity"
					],
					"query": [
						{
							"key": "key",
							"value": "5881028",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	]
}